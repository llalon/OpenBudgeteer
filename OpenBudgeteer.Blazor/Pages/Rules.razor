@page "/rules"
@using System.Drawing
@using OpenBudgeteer.Blazor.Common
@using OpenBudgeteer.Core.Common.Extensions
@using OpenBudgeteer.Core.ViewModels.EntityViewModels
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size

<MudStack Row Spacing="1">
    <MudButton Class="me-2 mb-2" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" OnClick="() => ShowEditRuleSetDialog(null)">Create Rule</MudButton>
    @if (_selectedRuleSets.Count > 0)
    {
        <MudButton Class="me-2 mb-2" Variant="Variant.Filled" Size="Size.Small" Color="Color.Error" OnClick="DeleteSelectedRuleSets">Delete @_selectedRuleSets.Count Selected</MudButton>
    }
</MudStack>

<MudDataGrid
    T="RuleSetViewModel"
    Items="@_dataContext.RuleSets"
    Dense="true"
    EditMode="DataGridEditMode.Form"
    Filterable="true"
    FilterMode="DataGridFilterMode.ColumnFilterMenu"
    FixedHeader="true"
    Hover="true"
    MultiSelection="true"
    ReadOnly="true"
    SortMode="SortMode.Multiple"
    SelectedItemsChanged="RuleSet_SelectionChanged">
    <Columns>
        <SelectColumn T="RuleSetViewModel" />
        <PropertyColumn Property="x => x.Priority"/>
        <PropertyColumn Property="x => x.Name"/>
        <PropertyColumn Property="x => x.TargetBucket.Name" Title="Target Bucket">
            <CellTemplate>
                <MudPaper
                    Class="d-flex align-center justify-center mud-width-full bucket-indicator no-background"
                    Style="@($"background-color: {ColorTranslator.ToHtml(context.Item.TargetBucket.Color)}; color: {ColorTranslator.ToHtml(context.Item.TargetBucket.TextColor)}")">
                    <MudText>@context.Item.TargetBucket.Name</MudText>
                </MudPaper>
            </CellTemplate>
            <FilterTemplate>
                <MudGrid Spacing="6" Style="width:430px">
                    <MudItem xs="12">
                        <MudSelect
                            T="BucketViewModel"
                            @bind-SelectedValues="_bucketMudFilter.SelectedItems"
                            MultiSelection="true"
                            MultiSelectionTextFunc="@(items => MultiSelectionTextHelper.GetText(items, "Buckets"))"
                            SelectAll="true">
                            @foreach (var partialBucket in _bucketMudFilter.AvailableItems)
                            {
                                <MudSelectItem Value="partialBucket">@partialBucket</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12" Class="d-flex justify-end">
                        <MudButton OnClick="@(() => _bucketMudFilter.ResetFilterOnContextAsync(context))">Clear</MudButton>
                        <MudButton Color="@Color.Primary" OnClick="@(() => _bucketMudFilter.ApplyFilterOnContextAsync(context))">Filter</MudButton>
                    </MudItem>
                </MudGrid>
            </FilterTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.MappingRules" Title="Mapping Rules">
            <CellTemplate>
                <MudStack Spacing="0">
                    @foreach (var mappingRule in context.Item.MappingRules)
                    {
                        <MudText>@mappingRule.ToString()</MudText>
                    }
                </MudStack>
            </CellTemplate>
            <FilterTemplate>
                <MudGrid Spacing="6" Style="width:430px">
                    <MudItem xs="12">
                        <MudSelect T="MappingRuleComparisonField" @bind-Value="_mappingRuleMudFilter.SelectedComparisonField" Label="Comparision Field">
                            @foreach (var comparisonField in _mappingRuleMudFilter.AvailableComparisonFields)
                            {
                                <MudSelectItem Value="comparisonField">@comparisonField</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="_mappingRuleMudFilter.ComparisionValue" Label="Comparison Value"/>
                    </MudItem>
                    <MudItem xs="12" Class="d-flex justify-end">
                        <MudButton OnClick="@(() => _mappingRuleMudFilter.ResetFilterOnContextAsync(context))">Clear</MudButton>
                        <MudButton Color="@Color.Primary" OnClick="@(() => _mappingRuleMudFilter.ApplyFilterOnContextAsync(context))">Filter</MudButton>
                    </MudItem>
                </MudGrid>
            </FilterTemplate>
        </PropertyColumn>
        <TemplateColumn>
            <CellTemplate>
                <MudStack AlignItems="AlignItems.End">
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="() => ShowEditRuleSetDialog(context.Item)"/>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
